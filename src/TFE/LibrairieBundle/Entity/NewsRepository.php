<?php

namespace TFE\LibrairieBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * NewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends EntityRepository
{
    public function countAll()
    {
        return $this->createQueryBuilder('n')
            ->select('COUNT(n)')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function countAllById($id)
    {
        return $this->createQueryBuilder('n')
            ->select('COUNT(n)')
            ->where('n.utilisateur = :id')
                ->setParameter('id', $id)
            ->andWhere('n.accueil = false')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function countActif()
    {
        return $this->createQueryBuilder('n')
            ->select('COUNT(n)')
            ->where('n.valide = true')
            ->andWhere('n.accueil = false')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function countInactif()
    {
        return $this->createQueryBuilder('n')
            ->select('COUNT(n)')
            ->where('n.valide = false')
            ->andWhere('n.accueil = false')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function getAllNewsWithUser()
    {
        return $this->createQueryBuilder('n')
            ->leftJoin('n.utilisateur', 'uti')
            ->addSelect('uti')
            ->where('n.valide = true')
            ->andWhere('n.accueil = false')
            ->setMaxResults(3)
            ->orderBy('n.dateNews', 'DESC')
            ->getQuery()
            ->getResult();
    }

    public function getListeValide($page, $maxNews)
    {
        $qb = $this->createQueryBuilder('n')
            ->leftJoin('n.utilisateur', 'uti')
            ->addSelect('uti')
            ->where('n.valide = true')
            ->andWhere('n.accueil = false')
            ->setFirstResult(($page - 1) * $maxNews)
            ->setMaxResults($maxNews)
            ->orderBy('n.dateNews', 'DESC');

        return new Paginator($qb);
    }

    public function getListeInvalide($page, $maxNews)
    {
        $qb = $this->createQueryBuilder('n')
            ->leftJoin('n.utilisateur', 'uti')
            ->addSelect('uti')
            ->where('n.valide = false')
            ->andWhere('n.accueil = false')
            ->setFirstResult(($page - 1) * $maxNews)
            ->setMaxResults($maxNews)
            ->orderBy('n.dateNews', 'DESC');

        return new Paginator($qb);
    }

    public function getListePerso($page, $maxNews, $id)
    {
        $qb = $this->createQueryBuilder('n')
            ->leftJoin('n.utilisateur', 'uti')
            ->addSelect('uti')
            ->where('uti.id = :id')
                ->setParameter('id', $id)
            ->andWhere('n.accueil = false')
            ->setFirstResult(($page - 1) * $maxNews)
            ->setMaxResults($maxNews)
            ->orderBy('n.dateNews', 'DESC');

        return new Paginator($qb);
    }

    public function getNewsWithUser($id)
    {
        return $this->createQueryBuilder('n')
            ->leftJoin('n.utilisateur', 'uti')
            ->addSelect('uti')
            ->where('n.id = :id')
                ->setParameter('id', $id)
            ->getQuery()
            ->getOneOrNullResult();
    }
}
